server.port: 8890

logging.level: info

resilience4j:
  ratelimiter.instances:
    nikkei:
      registerHealthIndicator: true
      limitRefreshPeriod: 1s          # 計測する期間
      limitForPeriod: 10              # 指定した期間の間に呼び出し可能な回数
      timeoutDuration: 10s            # スレッドが待機するデフォルトの時間
    kabuoji3:
      registerHealthIndicator: true
      limitRefreshPeriod: 1s          # 計測する期間
      limitForPeriod: 10              # 指定した期間の間に呼び出し可能な回数
      timeoutDuration: 10s            # スレッドが待機するデフォルトの時間
    minkabu:
      registerHealthIndicator: true
      limitRefreshPeriod: 1s          # 計測する期間
      limitForPeriod: 15              # 指定した期間の間に呼び出し可能な回数
      timeoutDuration: 10s            # スレッドが待機するデフォルトの時間
    yahoo-finance:
      registerHealthIndicator: true
      limitRefreshPeriod: 5s          # 計測する期間
      limitForPeriod: 7               # 指定した期間の間に呼び出し可能な回数
      timeoutDuration: 10s            # スレッドが待機するデフォルトの時間

app:
  config:
    rest-client:
      edinet:
        base-uri: https://disclosure.edinet-fsa.go.jp
        connect-timeout: 5s
        read-timeout: 60s
        max-attempts: 3
        back-off: 10s
      selenium:
        base-uri: http://localhost:9001
        connect-timeout: 5s
        read-timeout: 120s
        max-attempts: 3
        back-off: 60s
      slack:
        base-uri: https://hooks.slack.com
        connect-timeout: 5s
        read-timeout: 30s
        max-attempts: 3
        back-off: 5s
      jsoup:
        connect-timeout: 5s
        read-timeout: 15s
        max-attempts: 2
        back-off: 20s
      nikkei:
        base-uri: https://www.nikkei.com
      kabuoji3:
        base-uri: https://kabuoji3.com
      minkabu:
        base-uri: https://minkabu.jp
      yahoo-finance:
        base-uri: https://finance.yahoo.co.jp

    executor:
      core-pool-size: 50
      queue-capacity: 50
      max-pool-size: 500

    slack:
      parameter:
        t: TKN2V6NQ4
        b: B01DFHHPE07
        x: x # 任意の値を設定

    view:
      discount-rate: 120  # 以上を表示
      outlier-of-standard-deviation: 10000  # 除外する標準偏差の外れ値
      coefficient-of-variation: 0.5  # 以下を表示
      diff-forecast-stock: 100  # 株価予想と最新株価との差が100以上を表示
      corporate.size: 300  # 日間を表示
      edinet-list.size: 400  # 日間を表示

    scraping:
      no-company: E31748,E03729
      # 日本郵政株式会社,信金中央金庫

    stock:
      nikkei.enabled: true
      kabuoji3.enabled: false
      minkabu.enabled: true
      yahoo-finance.enabled: true
      average-stock-price-for-last-days: 30  # 株価平均値の期間
      store-stock-price-for-last-days: 1000  # 株価の保存期間

    remove-document:
      document-type-code: 140,150
      company: E03815,E03041,E01737,E34537,E33624,E01542,E33625,E03724,E02611,E05080,E00334,E00678,E01124,E00816,E05047,
        E00840,E05156,E02274,E00939,E34177,E27486,E05199,E00991,E05599,E01317,E05523
      # マネックスグループ株式会社,株式会社クレディセゾン,株式会社日立製作所,ポート株式会社,プレミアグループ株式会社,株式会社荏原製作所
      # アルヒ株式会社,Ｊトラスト株式会社,日本ユニシス株式会社,楽天グループ株式会社,日本ハム株式会社,ユニ・チャーム株式会社,ＨＯＹＡ株式会社
      # 協和キリン株式会社,株式会社リログループ,三井化学株式会社,株式会社デジタルガレージ,キヤノン株式会社,エーザイ株式会社, 株式会社GAtechnologies
      # ペプチドリーム株式会社,株式会社ＣＬホールディングス,ライオン株式会社,株式会社アドウェイズ,株式会社ＬＩＸＩＬ,ＩＮＥＳＴ株式会社

  settings:
    file:
      path:
        company:
          company: C:/${spring.application.name}/company
          zip: C:/${spring.application.name}/company/zip
        edinet: C:/${spring.application.name}/edinet
        decode: C:/${spring.application.name}/decode

  scheduler:
    hour:
      company: 1  # 時に処理実施
      stock: 5,6,7,12,13,14,15,16,17,18,19,20,21,22,23,0  # 時に処理実施
      analysis: 2  # 時に処理実施
      update-view: 3  # 時に処理実施
      recover-document-period: 3  # 時に処理実施
      evaluate: 4  # 時に処理実施

    stock.target-company.number: 500  # 件の会社に対して処理実施
    analysis.past-days: 30  # 日間に遡って処理実施
    recover-document-period.past-days: 30  # 日間に遡って処理実施

  slack:
    analysis-result.enabled: true
    update-view.enabled: false
    insert-stock.enabled: false
    delete-stock.enabled: false
    evaluate.enabled: true
