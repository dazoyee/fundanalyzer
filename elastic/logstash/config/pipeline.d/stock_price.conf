input {
  jdbc {
    clean_run => true
    jdbc_driver_library => "C:\Users\iorid\scoop\apps\mysql-connector-java\current\mysql-connector-java-8.0.28.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://localhost:3306/fundanalyzer"
    jdbc_user => fundanalyzer
    jdbc_password => fundanalyzer
    jdbc_paging_enabled => true
    jdbc_page_size => 100000
    tracking_column => "unix_ts_in_secs"
    use_column_value => true
    schedule => "0 */5 * * * *"
    statement => "
      -- Logstash stock_priceテーブル
      SELECT
        sp.id,
        c.code AS company_code,
        c.company_name,
        i.name AS industry_name,
        sp.target_date,
        sp.stock_price,
        sp.source_of,
        UNIX_TIMESTAMP(sp.created_at) AS unix_ts_in_secs
      FROM
        stock_price sp,
        company c,
        industry i
      WHERE (
        sp.company_code = c.code
      AND
        c.industry_id = i.id
      AND
        c.removed = '0'
      AND
        UNIX_TIMESTAMP(sp.created_at) > :sql_last_value
      AND
        sp.created_at < NOW()
      )
    "
  }
}

filter {
  # 企業情報
  mutate {
    copy => { "company_code" => "c_code" }
  }
  truncate {
    fields => "c_code"
    length_bytes => 4
  }
  mutate {
    add_field => { "company" => "%{c_code}:%{company_name}" }
    remove_field => [ "c_code" ]
  }

  # 対象日時
  if [target_date] {
    date {
      match => [ "target_date", "yyyy-MM-dd" ]
      target => "target_date"
    }
  }

  mutate {
    remove_field => ["@version", "unix_ts_in_secs"]
  }
}

output {
  elasticsearch {
      ssl => true
      ssl_certificate_verification => false
      index => "fundanalyzer-stock_price-%{+YYYY.MM}"
      doc_as_upsert => true
      document_id => "stock_price-%{id}"
      user => "elastic"
      password => "elastic"
      ilm_enabled => true
      ilm_rollover_alias => "fundanalyzer-stock_price"
      ilm_policy => "fundanalyzer-stock_price"
  }
}
